version: '3.9'

services:
  mysql8-container:
    #image: mysql:8.1.0
    image: mysql/mysql-server:8.0.32-1.2.11-server
    container_name: mysql8-container
    restart: always
    ports:
      - "3307:3306"
    networks:
      - mydatabases
    environment:
      MYSQL_ROOT_PASSWORD: Abc123456789@
    volumes:
      - ./mysql8-data:/var/lib/mysql

  mysql5-container:
    #image: mysql:5.7.43
    image: mysql/mysql-server:5.6.40-1.1.5
    container_name: mysql5-container
    restart: always
    ports:
      - "3308:3306"
    networks:
      - mydatabases
    environment:
      MYSQL_ROOT_PASSWORD: Abc123456789@
    volumes:
      - ./mysql5-data:/var/lib/mysql

  phpmyadmin8-container:
    #image: phpmyadmin/phpmyadmin
    image: arm64v8/phpmyadmin
    container_name: phpmyadmin8-container
    restart: always
    ports:
      - "8088:80"
    environment:
      PMA_HOST: mysql8-container #phpMyAdmin Host
    networks:
      - mydatabases

  phpmyadmin5-container:
    #image: phpmyadmin/phpmyadmin
    image: arm64v8/phpmyadmin
    container_name: phpmyadmin5-container
    restart: always
    ports:
      - "8089:80"
    environment:
      PMA_HOST: mysql5-container
    networks:
      - mydatabases

  sqlserver2022-container:
    #image: mcr.microsoft.com/mssql/server:2022-latest
    image: mcr.microsoft.com/azure-sql-edge    
    container_name: sqlserver2022-container
    restart: always
    ports:
      - "1434:1433"
    environment:
      SA_PASSWORD: Abc123456789@
      ACCEPT_EULA: Y
    networks:
      - mydatabases
    volumes:
      - ./sqlserver2022-data:/var/opt/mssql/data

  sqlserver2019-container:
    image: mcr.microsoft.com/mssql/server:2019-latest    
    container_name: sqlserver2019-container
    restart: always
    ports:
      - "1435:1433"
    environment:
      SA_PASSWORD: Abc123456789@
      ACCEPT_EULA: Y
    networks:
      - mydatabases
    volumes:
      - ./sqlserver2019-data:/var/opt/mssql/data

networks:
  mydatabases:

volumes:
  mysql8-data:
  mysql5-data:
  sqlserver2022-data:
  sqlserver2019-data:

  #docker-compose -f ./deployment.yml up -d
  #docker-compose -f ./deployment.yml down --volumes -v
  #docker-compose ps
  #docker network rm mydatabases_mydatabases

