using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Http;
using Microsoft.Extensions.DependencyInjection;
using Microsoft.Extensions.DependencyInjection;
using PollBall.Services;
using Microsoft.AspNetCore.Hosting;


namespace PollBall
{
    public class Startup
    {
        // This method gets called by the runtime. Use this method to add services to the container.
        // For more information on how to configure your application, visit https://go.microsoft.com/fwlink/?LinkID=398940
        public void ConfigureServices(IServiceCollection services)
        {
            //many services
            //services.AddSingleton<IPollResultsService, PollResultsService>();
            services.AddTransient<IPollResultsService, PollResultsService>();
        }

        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
        public void Configure(IApplicationBuilder app,
            IHostingEnvironment env, IPollResultsService pollResults)
        {
            app.UseStaticFiles();
            app.Use(async (context, next) =>
            {
                await context.Response.WriteAsync(
                    "This text was generated by the app.Run middleware. wwwroot folder path: " 
                    + env.WebRootPath);
                string selectedValue = context.Request.Query["favorite"];
                SelectedGame selectedGame = (SelectedGame)Enum
                    .Parse(typeof(SelectedGame), selectedValue, true);
                pollResults.AddVote(selectedGame);
                await context.Response.WriteAsync("Selected value is: " + selectedValue);

            });
            
            app.UseRouting();            
            app.Run(async (context) =>
            {
                await context.Response.WriteAsync("This text was generated by the app.Run middleware.");
            });
        }
    }

}

