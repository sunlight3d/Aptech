@using ProjectAppDotNetCore.Controllers;
@model PaginatedList<ProjectAppDotNetCore.Models.ProjectEmployee>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table table-success table-striped">
    <thead>
        <!-- Thêm lớp thead-primary và text-white -->
        <tr>
            <th>
                Employee's Name
            </th>
            <th>
                Project's Name
            </th>
            <th>
                Tasks
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="text-decoration-none">
                    Project's Start date
                    @if (ViewData["DateSortParm"].ToString() == "Date")
                    {
                        <i class="fa-solid fa-caret-down fa-lg"></i>
                    }
                    else
                    {
                        <i class="fa-solid fa-caret-up fa-lg"></i>
                    }
                </a>
            </th>


            <th></th>
        </tr>
    </thead>

    <tbody>
@foreach (var item in Model) {
        <tr>            
            <td>
                @Html.DisplayFor(modelItem => item.Employee.EmployeeName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Project.ProjectName)
            </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Tasks)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Project.ProjectStartDate)
                </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<!-- Các nút Previous và Next sẽ được bỏ vào một danh sách ngang -->
<ul class="pagination">
    @for (int i = 1; i <= Model.TotalPages; i++)
    {
        <li class="page-item @(i == Model.PageIndex ? "active" : "")">
            <a class="page-link" asp-action="Index"
               asp-route-sortOrder="@ViewData["CurrentSort"]"
               asp-route-pageNumber="@i"
               asp-route-currentFilter="@ViewData["CurrentFilter"]">
                @i
            </a>
        </li>
    }
</ul>