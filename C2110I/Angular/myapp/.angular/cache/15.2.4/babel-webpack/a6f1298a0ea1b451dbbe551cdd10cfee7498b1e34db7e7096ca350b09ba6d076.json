{"ast":null,"code":"import _asyncToGenerator from \"D:/code/Aptech/C2110I/Angular/myapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment } from 'environment';\nimport { HttpHeaders } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  //products: Product[] = []\n  constructor(http) {\n    this.http = http;\n  }\n  loadAllProducts() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const url = `${environment.apiUrl}/Products/GetAllProducts`;\n      const token = localStorage.getItem('token');\n      const headers = new HttpHeaders({\n        'Authorization': 'Bearer ' + token\n      });\n      debugger;\n      const httpObject = _this.http;\n      return new Promise((resolve, reject) => {\n        debugger;\n        httpObject.get(url, {\n          headers\n        }).pipe(catchError(error => {\n          debugger;\n          console.error('Error occurred:', error);\n          return throwError('Something went wrong; please try again later.');\n        })).subscribe(response => {\n          debugger;\n          return response;\n        });\n      });\n    })();\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AACA,SAASA,WAAW,QAAQ,aAAa;AAGzC,SAAqBC,WAAW,QAA2B,sBAAsB;AACjF,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,SAASC,UAAU,QAAQ,MAAM;;;AAMjC,OAAM,MAAOC,cAAc;EACzB;EACAC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAExB;EACMC,eAAeA;IAAA;IAAA;MACnB,MAAMC,GAAG,GAAG,GAAGR,WAAW,CAACS,MAAM,0BAA0B;MAC3D,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAE3C,MAAMC,OAAO,GAAG,IAAIZ,WAAW,CAAC;QAC9B,eAAe,EAAE,SAAS,GAAGS;OAC9B,CAAC;MACF;MACA,MAAMI,UAAU,GAAGC,KAAI,CAACT,IAAI;MAC5B,OAAO,IAAIU,OAAO,CAAY,CAACC,OAAO,EAAEC,MAAM,KAAI;QAChD;QACAJ,UAAU,CAACK,GAAG,CAACX,GAAG,EAAE;UAACK;QAAO,CAAC,CAAC,CAC7BO,IAAI,CACHlB,UAAU,CAAEmB,KAAwB,IAAI;UACtC;UACAC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;UACvC,OAAOlB,UAAU,CAAC,+CAA+C,CAAC;QACpE,CAAC,CAAC,CACH,CACAoB,SAAS,CAACC,QAAQ,IAAG;UAClB;UACA,OAAOA,QAAQ;QACnB,CAAC,CAAC;MACJ,CAAC,CAAC;IAAA;EACJ;;AA7BWpB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAqB,SAAdrB,cAAc;EAAAsB,YAFb;AAAM","names":["environment","HttpHeaders","catchError","throwError","ProductService","constructor","http","loadAllProducts","url","apiUrl","token","localStorage","getItem","headers","httpObject","_this","Promise","resolve","reject","get","pipe","error","console","subscribe","response","factory","providedIn"],"sourceRoot":"","sources":["D:\\code\\Aptech\\C2110I\\Angular\\myapp\\src\\app\\services\\product\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core'\nimport { environment } from 'environment'\nimport { Product } from 'src/app/models/product.model'\nimport { lastValueFrom } from 'rxjs'\nimport { HttpClient, HttpHeaders,HttpErrorResponse  } from '@angular/common/http'\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  //products: Product[] = []\n  constructor(private http: HttpClient) { \n    \n  }\n  async loadAllProducts(): Promise<Product[]> {\n    const url = `${environment.apiUrl}/Products/GetAllProducts`   \n    const token = localStorage.getItem('token') \n\n    const headers = new HttpHeaders({\n      'Authorization': 'Bearer ' + token\n    })\n    debugger\n    const httpObject = this.http\n    return new Promise<Product[]>((resolve, reject) => {\n      debugger\n      httpObject.get(url, {headers})\n      .pipe(\n        catchError((error: HttpErrorResponse) => {\n          debugger\n          console.error('Error occurred:', error);\n          return throwError('Something went wrong; please try again later.');\n        })\n      )\n      .subscribe(response => {\n          debugger\n          return response          \n      })      \n    })       \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}