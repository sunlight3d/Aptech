{"ast":null,"code":"import _asyncToGenerator from \"D:/code/Aptech/C2110I/Angular/myapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment } from 'environment';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  //products: Product[] = []\n  constructor(http) {\n    this.http = http;\n  }\n  loadAllProducts() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const url = `${environment.apiUrl}/products`;\n      const token = localStorage.getItem('token');\n      const headers = new HttpHeaders({\n        'Authorization': 'Bearer ' + token\n      });\n      debugger;\n      return new Promise((resolve, reject) => {\n        _this.http.get(url, {\n          headers\n        }).subscribe(response => {\n          debugger;\n          return [{\n            id: 11,\n            name: 'n11',\n            description: 'This is it',\n            producer: 'Apple',\n            price: 123\n          }];\n        });\n      }).catch(error => reject(error));\n    })();\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AACA,SAASA,WAAW,QAAQ,aAAa;AAGzC,SAAqBC,WAAW,QAAQ,sBAAsB;;;AAK9D,OAAM,MAAOC,cAAc;EACzB;EACAC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAExB;EACMC,eAAeA;IAAA;IAAA;MACnB,MAAMC,GAAG,GAAG,GAAGN,WAAW,CAACO,MAAM,WAAW;MAC5C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAE3C,MAAMC,OAAO,GAAG,IAAIV,WAAW,CAAC;QAC9B,eAAe,EAAE,SAAS,GAAGO;OAC9B,CAAC;MACF;MACA,OAAO,IAAII,OAAO,CAAY,CAACC,OAAO,EAAEC,MAAM,KAAI;QAChDC,KAAI,CAACX,IAAI,CAACY,GAAG,CAACV,GAAG,EAAE;UAACK;QAAO,CAAC,CAAC,CAACM,SAAS,CAACC,QAAQ,IAAG;UAC/C;UACA,OAAO,CAAC;YACNC,EAAE,EAAE,EAAE;YACNC,IAAI,EAAC,KAAK;YACVC,WAAW,EAAE,YAAY;YACzBC,QAAQ,EAAE,OAAO;YACjBC,KAAK,EAAE;WACR,CAAC;QACN,CAAC,CAAC;MACJ,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAIX,MAAM,CAACW,KAAK,CAAC,CAAC;IAAC;EAEnC;;AA1BWvB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAwB,SAAdxB,cAAc;EAAAyB,YAFb;AAAM","names":["environment","HttpHeaders","ProductService","constructor","http","loadAllProducts","url","apiUrl","token","localStorage","getItem","headers","Promise","resolve","reject","_this","get","subscribe","response","id","name","description","producer","price","catch","error","factory","providedIn"],"sourceRoot":"","sources":["D:\\code\\Aptech\\C2110I\\Angular\\myapp\\src\\app\\services\\product\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core'\nimport { environment } from 'environment'\nimport { Product } from 'src/app/models/product.model'\nimport { lastValueFrom } from 'rxjs'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  //products: Product[] = []\n  constructor(private http: HttpClient) { \n    \n  }\n  async loadAllProducts(): Promise<Product[]> {\n    const url = `${environment.apiUrl}/products`   \n    const token = localStorage.getItem('token') \n\n    const headers = new HttpHeaders({\n      'Authorization': 'Bearer ' + token\n    })\n    debugger\n    return new Promise<Product[]>((resolve, reject) => {\n      this.http.get(url, {headers}).subscribe(response => {\n          debugger          \n          return [{\n            id: 11,\n            name:'n11',\n            description: 'This is it',\n            producer: 'Apple',\n            price: 123\n          }]\n      })       \n    }).catch(error => reject(error));\n       \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}