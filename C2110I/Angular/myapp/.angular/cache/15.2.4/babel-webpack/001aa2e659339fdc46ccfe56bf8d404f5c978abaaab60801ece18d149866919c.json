{"ast":null,"code":"import _asyncToGenerator from \"D:/code/Aptech/C2110I/Angular/myapp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment } from 'environment';\nimport { lastValueFrom } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  //products: Product[] = []\n  constructor(http) {\n    this.http = http;\n  }\n  loadAllProducts() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const url = `${environment.apiUrl}/products`;\n      const token = localStorage.getItem('token');\n      const headers = new HttpHeaders({\n        'Authorization': 'Bearer ' + token\n      });\n      debugger;\n      _this.http.get(url, {\n        headers\n      }).subscribe();\n      const response = yield lastValueFrom(_this.http.get(url, {\n        headers\n      }));\n      debugger;\n      return [{\n        id: 11,\n        name: 'n11',\n        description: 'This is it',\n        producer: 'Apple',\n        price: 123\n      }];\n    })();\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AACA,SAASA,WAAW,QAAQ,aAAa;AAEzC,SAASC,aAAa,QAAQ,MAAM;AACpC,SAAqBC,WAAW,QAAQ,sBAAsB;;;AAK9D,OAAM,MAAOC,cAAc;EACzB;EACAC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAExB;EACMC,eAAeA;IAAA;IAAA;MACnB,MAAMC,GAAG,GAAG,GAAGP,WAAW,CAACQ,MAAM,WAAW;MAC5C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAE3C,MAAMC,OAAO,GAAG,IAAIV,WAAW,CAAC;QAC9B,eAAe,EAAE,SAAS,GAAGO;OAC9B,CAAC;MACF;MACAI,KAAI,CAACR,IAAI,CAACS,GAAG,CAACP,GAAG,EAAE;QAACK;MAAO,CAAC,CAAC,CAACG,SAAS,EAAE;MACzC,MAAMC,QAAQ,SAASf,aAAa,CAACY,KAAI,CAACR,IAAI,CAACS,GAAG,CAACP,GAAG,EAAE;QAAEK;MAAO,CAAE,CAAC,CAAC;MACrE;MACA,OAAO,CAAC;QACNK,EAAE,EAAE,EAAE;QACNC,IAAI,EAAC,KAAK;QACVC,WAAW,EAAE,YAAY;QACzBC,QAAQ,EAAE,OAAO;QACjBC,KAAK,EAAE;OACR,CAAC;IAAA;EACJ;;AAvBWlB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAmB,SAAdnB,cAAc;EAAAoB,YAFb;AAAM","names":["environment","lastValueFrom","HttpHeaders","ProductService","constructor","http","loadAllProducts","url","apiUrl","token","localStorage","getItem","headers","_this","get","subscribe","response","id","name","description","producer","price","factory","providedIn"],"sourceRoot":"","sources":["D:\\code\\Aptech\\C2110I\\Angular\\myapp\\src\\app\\services\\product\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core'\nimport { environment } from 'environment'\nimport { Product } from 'src/app/models/product.model'\nimport { lastValueFrom } from 'rxjs'\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  //products: Product[] = []\n  constructor(private http: HttpClient) { \n    \n  }\n  async loadAllProducts(): Promise<Product[]> {\n    const url = `${environment.apiUrl}/products`   \n    const token = localStorage.getItem('token') \n\n    const headers = new HttpHeaders({\n      'Authorization': 'Bearer ' + token\n    })\n    debugger\n    this.http.get(url, {headers}).subscribe()\n    const response = await lastValueFrom(this.http.get(url, { headers }))\n    debugger    \n    return [{\n      id: 11,\n      name:'n11',\n      description: 'This is it',\n      producer: 'Apple',\n      price: 123\n    }]\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}